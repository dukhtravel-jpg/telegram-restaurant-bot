name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE: telegram-restaurant-bot
  REGION: europe-west1
  REPOSITORY: telegram-bot-repo

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker to use gcloud
      run: gcloud auth configure-docker europe-west1-docker.pkg.dev

    - name: Create Artifact Registry repository
      run: |
        gcloud artifacts repositories create $REPOSITORY \
          --repository-format=docker \
          --location=$REGION \
          --description="Docker repository for telegram bot" || true

    - name: Disable Docker Buildx
      run: |
        docker buildx rm builder || true
        export DOCKER_BUILDKIT=0

    - name: Build and Push Docker image
      run: |
        export DOCKER_BUILDKIT=0
        IMAGE_URL=europe-west1-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE:$GITHUB_SHA
        echo "Building image: $IMAGE_URL"
        docker build -t $IMAGE_URL .
        echo "Pushing image: $IMAGE_URL"
        docker push $IMAGE_URL

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE \
          --image europe-west1-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE:$GITHUB_SHA \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --set-env-vars="TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" \
          --set-env-vars="OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" \
          --set-env-vars="GOOGLE_CREDENTIALS_JSON=${{ secrets.GOOGLE_CREDENTIALS_JSON }}" \
          --set-env-vars="GOOGLE_SHEET_URL=${{ secrets.GOOGLE_SHEET_URL }}" \
          --memory=1Gi \
          --cpu=1 \
          --timeout=300 \
          --concurrency=1000 \
          --max-instances=10
